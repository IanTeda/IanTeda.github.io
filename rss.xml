<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.0.1">Jekyll</generator><link href="http://localhost:3000/rss.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:3000/" rel="alternate" type="text/html" /><updated>2016-03-14T20:46:41+11:00</updated><id>http://localhost:3000/</id><title>Ian Teda</title><subtitle>Husband, Father, Engineer, Explorer &amp; Creator</subtitle><author><name>Ian Teda</name><email>ian@teda.id.au</email></author><entry><title>Gulp, Jekyll, Github Pages &amp;amp; Cloudflare</title><link href="http://localhost:3000/programming/gulp-jekyll-github-pages-cloudflare.html" rel="alternate" type="text/html" title="Gulp, Jekyll, Github Pages &amp; Cloudflare" /><published>2016-03-15T00:00:00+11:00</published><updated>2016-03-15T00:00:00+11:00</updated><id>http://localhost:3000/programming/gulp-jekyll-github-pages-cloudflare</id><content type="html" xml:base="http://localhost:3000/programming/gulp-jekyll-github-pages-cloudflare.html">&lt;blockquote&gt;
  &lt;p&gt;Flexible, simple, fast, secure &amp;amp; https. Total cost, $15AUD for domain registration.
&lt;cite&gt; — Ian Teda &lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Web technologies for development hosting and security are numerous. With each propent singing there own praises. At the start of my &lt;a href=&quot;https://ianteda.com&quot;&gt;ianteda.com&lt;/a&gt; project &lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; I looked around at the options.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://wordpress.org/&quot;&gt;Wordpress&lt;/a&gt; serves up over 26%&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt; of the internet, but I was bored with it. So I crossed that one off the list &lt;i class=&quot;fa fa-times&quot;&gt;&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;I almost settled on &lt;a href=&quot;https://ghost.org/&quot;&gt;Ghost&lt;/a&gt;. The idea of playing around with &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; tickled my fancy. But I balked at the hosting options, which cost money and are few. Hosting with &lt;a href=&quot;https://www.digitalocean.com/&quot;&gt;DigitalOcean&lt;/a&gt; almost swayed me and self hosting &lt;a href=&quot;https://ghost.org/&quot;&gt;Ghost&lt;/a&gt; was a cheaper option, but both would require what time I do have keeping the server up and current instead of creating content. So I cross that one off the list &lt;i class=&quot;fa fa-times&quot;&gt;&lt;/i&gt;.&lt;/p&gt;

&lt;p&gt;In the end, the technology stack I chose for my &lt;a href=&quot;https://en.wikipedia.org/wiki/Quiver&quot;&gt;quiver&lt;/a&gt; was made up of &lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt; for development, &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; as the web platform, &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; for the hosting, and &lt;a href=&quot;https://www.cloudflare.com/&quot;&gt;Cloudfare&lt;/a&gt; for CDN and HTTPS. Total cost, $15AUD for domain registration. Tick &lt;i class=&quot;fa fa-check&quot;&gt;&lt;/i&gt;.&lt;/p&gt;

&lt;h2 id=&quot;gulphttpgulpjscom-development&quot;&gt;&lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt; (Development)&lt;/h2&gt;
&lt;p&gt;Jekyll comes with tooling out of the box to help with development, such as server reload on file change and SASS transpiling. But I wanted more flexibility (options) with my development workflow, so I piped in Gulp (did you see what I did there, Gulp joke). Using Gulp opened up my workflow to the Gulp &lt;a href=&quot;http://gulpjs.com/plugins/&quot;&gt;ecosystem&lt;/a&gt; and the 2,251 plugins in it.&lt;/p&gt;

&lt;p&gt;Below is a list of the plugins that I used during development and for deployment of the site in alphabetical order:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/autoprefixer&quot;&gt;autoprefixer&lt;/a&gt;: Write cleaner CSS by adding vender prefixes postCSS&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/browser-sync&quot;&gt;Browsersync&lt;/a&gt;: Live reload CSS and keep multiple browsers &amp;amp; devices in sync&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/gulp-concat/&quot;&gt;Concat&lt;/a&gt;: Join multiple files into one CSS &amp;amp; JavaScript&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/css-mqpacker&quot;&gt;css-mqpacker&lt;/a&gt;: Pack the same CSS media query rules into one media query rule postCSS&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/csswring&quot;&gt;csswring&lt;/a&gt;: Delete unneed characters in my CSS file with source maps postCSS&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/gulp-eslint/&quot;&gt;eslint&lt;/a&gt;: Lint my JavaScript&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/eslint-config-google&quot;&gt;eslint-config-google&lt;/a&gt;: Lint my JavaScript using the Google style guide&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/gulp-gh-pages/&quot;&gt;gh-pages&lt;/a&gt;: Publish the website build to Github Pages&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/gulp-gzip/&quot;&gt;Gzip&lt;/a&gt;: Compress the deployed files to reduce load time – i.e. html and JavaScript&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/gulp-htmlmin/&quot;&gt;htmlmin&lt;/a&gt;: Delete unneeded characters in my html&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/gulp-imagemin/&quot;&gt;Imagemin&lt;/a&gt;: Minify my PNG, JPEG, GIF and SVG images. I have some problems with this one.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/gulp-inject/&quot;&gt;Inject&lt;/a&gt;: Inject dynamic CSS and JavaScript file references into the html header and footer&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/gulp-postcss/&quot;&gt;postCSS&lt;/a&gt;: Transform CSS styles with JavaScript plugins&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/gulp-sass/&quot;&gt;SASS&lt;/a&gt;: Transpile SASS into CSS&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;jekyll-website&quot;&gt;Jekyll (Website)&lt;/h3&gt;
&lt;p&gt;I decided to use Jekyll when it dawned on me that for any content management system (CMS) to be fast it needs a cache system. What is a cache system? but a static webpage generator. Since I did not need the functionality of allowing access to multiple authors – which could still be done with Jekyll and Github, but would require more technical knowledge from the author – lets skip the whole database thing and go straight to generating the webpages on my local machine and uploading the build.&lt;/p&gt;

&lt;p&gt;By removing the database I reduced my cyber attach profile – no database calls – and simplifies hosting requirements. Opening up cheaper hosting options.&lt;/p&gt;

&lt;p&gt;Jekyll is easy to setup on Mac and Linux machines but is a little bit more work on Windows&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h3 id=&quot;github-pageshttpjekyllrbcom-hosting&quot;&gt;&lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Github Pages&lt;/a&gt; (Hosting)&lt;/h3&gt;
&lt;p&gt;Jekyll was written by &lt;a href=&quot;https://en.wikipedia.org/wiki/Tom_Preston-Werner&quot;&gt;Tom Preston-Werner&lt;/a&gt;, the co-founder of Github. So it isn’t surprising that Github supports hosting of Jekyll websites – known as &lt;a href=&quot;https://pages.github.com&quot;&gt;Github Pages&lt;/a&gt;, which removes the need to generate webpages locally. However, Github Pages only allows a few Jekyll Gems (plugins) to run on their server. So I decided to develop locally and upload the build to GitHub Pages. I can do what ever I like now, it is my machine.&lt;/p&gt;

&lt;p&gt;GitHub Pages also offers CDN and domain redirects&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;, meaning speed and your own domain name. On top of all that the price is right, free.&lt;/p&gt;

&lt;h3 id=&quot;cloudfarehttpswwwcloudflarecom-https&quot;&gt;&lt;a href=&quot;https://www.cloudflare.com/&quot;&gt;Cloudfare&lt;/a&gt; (HTTPS)&lt;/h3&gt;
&lt;p&gt;Cloudfare makes your website faster and safer by offering DOS protection, shared SSL and CDN cache. They believe so deeply about a secure internet, they have a free tier plan&lt;sup id=&quot;fnref:5&quot;&gt;&lt;a href=&quot;#fn:5&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt;. Tick, tick and tick. They use a Universal SSL to secure the connection between your users and CloudFlare&lt;sup id=&quot;fnref:6&quot;&gt;&lt;a href=&quot;#fn:6&quot; class=&quot;footnote&quot;&gt;6&lt;/a&gt;&lt;/sup&gt;. Giving your website a https address.&lt;/p&gt;

&lt;p&gt;I used the linked guide for setting up my Jekyll / GitHub website with Clodflare&lt;sup id=&quot;fnref:7&quot;&gt;&lt;a href=&quot;#fn:7&quot; class=&quot;footnote&quot;&gt;7&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;h5 id=&quot;footnotes&quot;&gt;Footnotes&lt;/h5&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;ttps://github.com/IanTeda/IanTeda.github.io&quot;&gt;GitHub Repository for ianteda.com source code&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://w3techs.com/technologies/overview/content_management/all&quot;&gt;Usage of content management systems for websites&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;http://jekyll-windows.juthilo.com/&quot;&gt;Setting up Jekyll on Windows&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/using-a-custom-domain-with-github-pages/&quot;&gt;Set up subdomain Github&lt;/a&gt; &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:5&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.cloudflare.com/plans/&quot;&gt;CloudFlare Plans&lt;/a&gt; &lt;a href=&quot;#fnref:5&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:6&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://www.cloudflare.com/ssl/&quot;&gt;CloudFlare one-click SSL&lt;/a&gt; &lt;a href=&quot;#fnref:6&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:7&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://sheharyar.me/blog/free-ssl-for-github-pages-with-custom-domains/&quot;&gt;Free SSL for GitHub Pages with Custom Domains&lt;/a&gt; &lt;a href=&quot;#fnref:7&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><category term="programming" /><category term="Gulp" /><category term="Jekyll" /><category term="Github" /><category term="Github Pages" /><category term="Cloudflare" /><summary>Flexible, simple, fast, secure &amp;amp; https. Total cost, $15AUD for domain registration.
 — Ian Teda 


Web technologies for development hosting and security are numerous. With each propent singing there own praises. At the start of my ianteda.com project 1 I looked around at the options.

Wordpress serves up over 26%2 of the internet, but I was bored with it. So I crossed that one off the list .

I almost settled on Ghost. The idea of playing around with Node.js tickled my fancy. But I balked at the hosting options, which cost money and are few. Hosting with DigitalOcean almost swayed me and self hosting Ghost was a cheaper option, but both would require what time I do have keeping the server up and current instead of creating content. So I cross that one off the list .

In the end, the technology stack I chose for my quiver was made up of Gulp for development, Jekyll as the web platform, Github Pages for the hosting, and Cloudfare for CDN and HTTPS. Total cost, $15AUD for domain registration. Tick .

Gulp (Development)
Jekyll comes with tooling out of the box to help with development, such as server reload on file change and SASS transpiling. But I wanted more flexibility (options) with my development workflow, so I piped in Gulp (did you see what I did there, Gulp joke). Using Gulp opened up my workflow to the Gulp ecosystem and the 2,251 plugins in it.

Below is a list of the plugins that I used during development and for deployment of the site in alphabetical order:


  autoprefixer: Write cleaner CSS by adding vender prefixes postCSS
  Browsersync: Live reload CSS and keep multiple browsers &amp;amp; devices in sync
  Concat: Join multiple files into one CSS &amp;amp; JavaScript
  css-mqpacker: Pack the same CSS media query rules into one media query rule postCSS
  csswring: Delete unneed characters in my CSS file with source maps postCSS
  eslint: Lint my JavaScript
  eslint-config-google: Lint my JavaScript using the Google style guide
  gh-pages: Publish the website build to Github Pages
  Gzip: Compress the deployed files to reduce load time – i.e. html and JavaScript
  htmlmin: Delete unneeded characters in my html
  Imagemin: Minify my PNG, JPEG, GIF and SVG images. I have some problems with this one.
  Inject: Inject dynamic CSS and JavaScript file references into the html header and footer
  postCSS: Transform CSS styles with JavaScript plugins
  SASS: Transpile SASS into CSS


Jekyll (Website)
I decided to use Jekyll when it dawned on me that for any content management system (CMS) to be fast it needs a cache system. What is a cache system? but a static webpage generator. Since I did not need the functionality of allowing access to multiple authors – which could still be done with Jekyll and Github, but would require more technical knowledge from the author – lets skip the whole database thing and go straight to generating the webpages on my local machine and uploading the build.

By removing the database I reduced my cyber attach profile – no database calls – and simplifies hosting requirements. Opening up cheaper hosting options.

Jekyll is easy to setup on Mac and Linux machines but is a little bit more work on Windows3

Github Pages (Hosting)
Jekyll was written by Tom Preston-Werner, the co-founder of Github. So it isn’t surprising that Github supports hosting of Jekyll websites – known as Github Pages, which removes the need to generate webpages locally. However, Github Pages only allows a few Jekyll Gems (plugins) to run on their server. So I decided to develop locally and upload the build to GitHub Pages. I can do what ever I like now, it is my machine.

GitHub Pages also offers CDN and domain redirects4, meaning speed and your own domain name. On top of all that the price is right, free.

Cloudfare (HTTPS)
Cloudfare makes your website faster and safer by offering DOS protection, shared SSL and CDN cache. They believe so deeply about a secure internet, they have a free tier plan5. Tick, tick and tick. They use a Universal SSL to secure the connection between your users and CloudFlare6. Giving your website a https address.

I used the linked guide for setting up my Jekyll / GitHub website with Clodflare7.

Footnotes


  
    
      GitHub Repository for ianteda.com source code &amp;#8617;
    
    
      Usage of content management systems for websites &amp;#8617;
    
    
      Setting up Jekyll on Windows &amp;#8617;
    
    
      Set up subdomain Github &amp;#8617;
    
    
      CloudFlare Plans &amp;#8617;
    
    
      CloudFlare one-click SSL &amp;#8617;
    
    
      Free SSL for GitHub Pages with Custom Domains &amp;#8617;</summary></entry><entry><title>Cotter Dam Intake Tower - Video</title><link href="http://localhost:3000/engineering/cotter-dam-intake-tower.html" rel="alternate" type="text/html" title="Cotter Dam Intake Tower - Video" /><published>2016-03-02T00:00:00+11:00</published><updated>2016-03-02T00:00:00+11:00</updated><id>http://localhost:3000/engineering/cotter-dam-intake-tower</id><content type="html" xml:base="http://localhost:3000/engineering/cotter-dam-intake-tower.html">&lt;div class=&quot;vido-wrapper&quot;&gt;
  &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/6MZ0eRckO34&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;A short video featuring yours truly, and the construction of the intake tower on the Cotter Dam project.&lt;/p&gt;</content><category term="engineering" /><category term="dams" /><summary>A short video featuring yours truly, and the construction of the intake tower on the Cotter Dam project.</summary></entry><entry><title>Idea Value Proposition</title><link href="http://localhost:3000/creativity/Idea-Value-Proposition.html" rel="alternate" type="text/html" title="Idea Value Proposition" /><published>2016-02-26T00:00:00+11:00</published><updated>2016-02-26T00:00:00+11:00</updated><id>http://localhost:3000/creativity/Idea-Value-Proposition</id><content type="html" xml:base="http://localhost:3000/creativity/Idea-Value-Proposition.html">&lt;blockquote&gt;
  &lt;p&gt;Daring ideas are like chessmen moved forward. They may be beaten, but they may start a winning game.
&lt;cite&gt; – Johann Wolfgang von Goethe &lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ideas are easy, cheap even. It is the execution that is hard, and because it is hard it is worth millions. If it wasn’t difficult everyone would be doing it, and if everyone was doing it it wouldn’t be worth as much.&lt;/p&gt;

&lt;p&gt;It is important to realise that an idea is not a product, it is not a business. A business, is an idea that is – or multiple ideas that are – executed well.  But ideas still have a value. An idea is multiplied by its execution to produce value for the business.  A good idea is worth more than a bad idea when multiplied by good execution.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Value Proposition
Product Value = Idea x Execution

// Bad Idea Multiplier
Product Value = 1 x 100,000 = 100,000 Units

// Good Idea Multiplier
Product Value = 100 x 100,000 = 10,000,000 Units

// Awful Idea Multiplier
Product Value = -1 x 100,000 = - 100,000 Units
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The more value or better an idea, the more it will multiple the value of the product.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Genius is one percent inspiration, ninety-nine percent perspiration.
&lt;cite&gt; – Thomas Edison &lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Even if you have an original, totally awesome idea, it want be long before someone else is copying it. After all it is an awesome idea. Success, therefor is about execution. The way you take that idea, brand it, market it, position it and then sell it.&lt;/p&gt;

&lt;p&gt;You don’t need an original idea. Google wasn’t the first search engine, Facebook wasn’t the first social platform and the iPod wasn’t the first music player. They just executed the idea better the those that came before and after them.&lt;/p&gt;

&lt;p&gt;What makes a bad idea? It’s hard to say. A bad idea maybe disguising itself as a good idea executed poorly. All the time you are thinking to yourself “I just need to persist and execute better”, when all you are doing is burning energy on an idea that you pushing up hill. It is important therefor to validate ideas (a topic for another post) before you execute.&lt;/p&gt;

&lt;p&gt;So don’t burn energy protecting and worrying that someone will steal your idea, they will. Put your focus into idea generation, idea valuation but mostly idea execution.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sivers.org/multiply&quot; target=&quot;_blank&quot;&gt;Ideas are just a multiplier of execution – Derek Sivers&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://medium.com/the-1-blog-series/ideas-are-cheap-execution-is-worth-millions-e203efbcaa49#.u9b3zzspk&quot; target=&quot;_blank&quot;&gt;Ideas Are Cheap, Execution is Worth Millions – Sathyvelu Kunashegaran&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Photo cover credit: &lt;a href=&quot;https://www.flickr.com/photos/larrymyhre/23648279433/&quot; target=&quot;_blank&quot;&gt;Larry Myhre&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="creativity" /><category term="Entrepreneurial" /><summary>Daring ideas are like chessmen moved forward. They may be beaten, but they may start a winning game.
 – Johann Wolfgang von Goethe 


Ideas are easy, cheap even. It is the execution that is hard, and because it is hard it is worth millions. If it wasn’t difficult everyone would be doing it, and if everyone was doing it it wouldn’t be worth as much.

It is important to realise that an idea is not a product, it is not a business. A business, is an idea that is – or multiple ideas that are – executed well.  But ideas still have a value. An idea is multiplied by its execution to produce value for the business.  A good idea is worth more than a bad idea when multiplied by good execution.

// Value Proposition
Product Value = Idea x Execution

// Bad Idea Multiplier
Product Value = 1 x 100,000 = 100,000 Units

// Good Idea Multiplier
Product Value = 100 x 100,000 = 10,000,000 Units

// Awful Idea Multiplier
Product Value = -1 x 100,000 = - 100,000 Units



The more value or better an idea, the more it will multiple the value of the product.


  Genius is one percent inspiration, ninety-nine percent perspiration.
 – Thomas Edison 


Even if you have an original, totally awesome idea, it want be long before someone else is copying it. After all it is an awesome idea. Success, therefor is about execution. The way you take that idea, brand it, market it, position it and then sell it.

You don’t need an original idea. Google wasn’t the first search engine, Facebook wasn’t the first social platform and the iPod wasn’t the first music player. They just executed the idea better the those that came before and after them.

What makes a bad idea? It’s hard to say. A bad idea maybe disguising itself as a good idea executed poorly. All the time you are thinking to yourself “I just need to persist and execute better”, when all you are doing is burning energy on an idea that you pushing up hill. It is important therefor to validate ideas (a topic for another post) before you execute.

So don’t burn energy protecting and worrying that someone will steal your idea, they will. Put your focus into idea generation, idea valuation but mostly idea execution.


  Ideas are just a multiplier of execution – Derek Sivers
  Ideas Are Cheap, Execution is Worth Millions – Sathyvelu Kunashegaran
  Photo cover credit: Larry Myhre</summary></entry><entry><title>Mastermind Group Brief</title><link href="http://localhost:3000/management/mastermind-group-breif.html" rel="alternate" type="text/html" title="Mastermind Group Brief" /><published>2016-02-17T00:00:00+11:00</published><updated>2016-02-17T00:00:00+11:00</updated><id>http://localhost:3000/management/mastermind-group-breif</id><content type="html" xml:base="http://localhost:3000/management/mastermind-group-breif.html">&lt;blockquote&gt;
  &lt;p&gt;No two minds ever come together without thereby creating a third, invisible intangible force, which may be likened to a third mind [the master mind].
&lt;cite&gt; – Napoleon Hill &lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The phrase Mastermind Group (MMG) was first coined by Napoleon Hill in his 1937 book “Think and Grow Rich”. A MMG is not a group coaching session but can be thought of as a peer advisory board that meets with the aim of sharpening the groups personal and business skills so they can achieve optimum outcomes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://ws-na.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=1585424331&amp;amp;Format=_SL110_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=US&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=iate-20&quot;&gt;&lt;img src=&quot;/assets/images/think-and-grow-rich.jpg&quot; alt=&quot;Think and Grow Rich - Book Cover&quot; title=&quot;Think and Grow Rich - Book Cover&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-why&quot;&gt;The Why?&lt;/h3&gt;

&lt;p&gt;“You are the average of the five people you spend the most time with.” — Jim Rohn&lt;/p&gt;

&lt;p&gt;The possible result of any situation will be the average of all possible outcomes. So if your aim is to become a professional table tennis player, then surround yourself with professional table tennis players. If you want to be successful then surround yourself with and successful people. A MMG is a way of surrounding yourself with like people of similar focuses ambitions and interest, increasing your changes of success. Both Benjamin Franklin and Thomas Edison saw the benefits and were involved in MMGs.&lt;/p&gt;

&lt;p&gt;Don’t reinvent the wheel, you are not the first person to aspire to be a professional table tennis player. MMG help you focus, shape or throw out ideas while increasing your confidence that you’ve made the right decisions and are taking correct actions. While providing inspiration and shared success stories, so you know it can be done.&lt;/p&gt;

&lt;p&gt;A MMG should be place of unbiased ideas, unbiased respectful opinions, encouragement, inspiration, shared resources and accountability. It should not be about chit chat and gossip but focused on your growth and the growth of others in the group through the collective brain power. To paraphrase Napoleon Hill, success is planned and earned the only limitation you have is the one you accept in your own mind.&lt;/p&gt;

&lt;h3 id=&quot;what-is-in-a-name&quot;&gt;What is in a name?&lt;/h3&gt;

&lt;p&gt;A name and description helps set the purpose and make clear the groups objective and helps ensure it is formed around people striving for a common purpose, but not necessarily with common perspectives. Hearing different views helps you see the forest from the trees. It is not always easy to see your own problems they way others do. It is important to have people with similar drive, commitment and be in the same place in business/life so that everyone gets something from the MGG and the input doesn’t become lop sided.&lt;/p&gt;

&lt;h3 id=&quot;mmg-membership&quot;&gt;MMG Membership&lt;/h3&gt;

&lt;p&gt;Pick your group members carefully, as the group will only be as good as the people in it. Try to choose people with different perspective and skill sets, because they will see the world in a different way and provide solutions you may not see. And only allow new members with the unanimous consent of the group.&lt;/p&gt;

&lt;p&gt;Be prepared to ask a member to leave the group if they are not up to the standard of participation and do it quickly once the poor behaviour becomes evident. A “slacking” member will bring down the energy and fun level of the whole group.&lt;/p&gt;

&lt;h3 id=&quot;create-habits-by-creating-rules&quot;&gt;Create habits by creating rules&lt;/h3&gt;

&lt;p&gt;A set of rules will help the group know what is expected of them, avoid disappointment and provide understanding about their return on their investment (time), after all the group needs to work for everyone. If someone is not a good fit for the group (i.e. not meeting expectations), then a set of rules — not followed — makes a hard conversation about someone leaving easier.&lt;/p&gt;

&lt;p&gt;6 Rules to create habits:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Rules are never forever (change where needed).&lt;/li&gt;
  &lt;li&gt;Group size should stay at 2 to 5 people to provide opportunity for all to speak and be listened to.&lt;/li&gt;
  &lt;li&gt;New members may only come in to the group with unanimous consent after a test in the hot seat.&lt;/li&gt;
  &lt;li&gt;Respect other peoples time. Don’t miss meetings and be on time.&lt;/li&gt;
  &lt;li&gt;What happens in the MMG stays in the MMG — it is a sacred place&lt;/li&gt;
  &lt;li&gt;Be willing to dissect and be dissected&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;meet-regularly-and-precisely&quot;&gt;Meet Regularly and Precisely&lt;/h3&gt;

&lt;p&gt;Keep to a regularly scheduled time and ensure all members are punctual and that meetings end on time. Give each member equal time and capture what happens at each meeting: lessons and triumphs; goals; and items you want to keep each other accountable to.&lt;/p&gt;

&lt;p&gt;Assuming a 60 minute meeting, a meeting will start with a 10 minute round table where everyone shares wins they have had — preferable from there previous meetings goals. This sets a positive tone for the meeting and gets the blood pumping. Followed by a 40 minute hot seat where one member presents a problem or business idea they are working on and the group provides feed back and advice on how to move forward. To close out the meeting a second 10 minute round table where the MMG share goals for the following period.&lt;/p&gt;

&lt;h3 id=&quot;roles-and-responsibilities&quot;&gt;Roles and Responsibilities&lt;/h3&gt;

&lt;p&gt;Each meeting needs three roles, that are rotated each week: The facilitator,  the hot seat and the group. The each have different responsibilities:&lt;/p&gt;

&lt;p&gt;The Facilitator&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The person from last weeks hot seat&lt;/li&gt;
  &lt;li&gt;Keep track of time&lt;/li&gt;
  &lt;li&gt;Direct the conversation&lt;/li&gt;
  &lt;li&gt;Prompt the quiet ones&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Hot Seat&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Present a problem or issue&lt;/li&gt;
  &lt;li&gt;Talk about current or upcoming projects&lt;/li&gt;
  &lt;li&gt;Present a recent finding or discovery&lt;/li&gt;
  &lt;li&gt;Ask specific (direction) questions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Group&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Listen, provide your full attention and respect that persons time&lt;/li&gt;
  &lt;li&gt;Share experiences and resources&lt;/li&gt;
  &lt;li&gt;Dissect and investigate further (why? more information)&lt;/li&gt;
  &lt;li&gt;Encourage and support (energize)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;tips&quot;&gt;Tips&lt;/h3&gt;

&lt;p&gt;9 Tips to for a successful MMG:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Be brutally honest&lt;/li&gt;
  &lt;li&gt;Share how you are best motivated (so how are you best motivated)&lt;/li&gt;
  &lt;li&gt;Dedicate goals meetings (2x per year)&lt;/li&gt;
  &lt;li&gt;Plan ahead when you are in the hot seat (don’t waste other peoples / your time)&lt;/li&gt;
  &lt;li&gt;Meet in person once a year (fun / fancy)&lt;/li&gt;
  &lt;li&gt;Start a private hub&lt;/li&gt;
  &lt;li&gt;Follow up and know it’s okay to disagree&lt;/li&gt;
  &lt;li&gt;Make it a priority&lt;/li&gt;
  &lt;li&gt;Create rules&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;building-a-mmg&quot;&gt;Building a MMG&lt;/h3&gt;

&lt;p&gt;MMG are build through networks and connections. A good way to build your network is to go to environments were you can find like minded people such as seminars, meet ups and industry groups.  The more successful you become the easier it is to find people for your MMG&lt;/p&gt;

&lt;h3 id=&quot;links--references&quot;&gt;Links / References&lt;/h3&gt;

&lt;p&gt;Some links and references used to write this post:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.lifehack.org/articles/productivity/how-to-start-and-run-a-mastermind-group.html&quot;&gt;How To Start and Run a Mastermind Group&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.thesuccessalliance.com/what-is-a-mastermind-group.html&quot;&gt;What is a Mastermind Group? A Definition&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=LDHCoNnuqUI&quot;&gt;Napoleon Hill’s Mastermind Principle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=6N-rAEgIxOY&quot;&gt;How to Structure a Mastermind Meeting - SPI TV, Ep. 10&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=p28vrcjZ8jc&quot;&gt;Mastermind Groups are the Secret to Success - Tips and Presentation! - SPI TV, Ep. 9&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=U0Np-IszK-8&quot;&gt;How to Build a Winning Mastermind Group (Webinar Replay) - SPI TV, Ep. 12&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="management" /><category term="Business" /><category term="Mastermind" /><summary>No two minds ever come together without thereby creating a third, invisible intangible force, which may be likened to a third mind [the master mind].
 – Napoleon Hill 


The phrase Mastermind Group (MMG) was first coined by Napoleon Hill in his 1937 book “Think and Grow Rich”. A MMG is not a group coaching session but can be thought of as a peer advisory board that meets with the aim of sharpening the groups personal and business skills so they can achieve optimum outcomes.



The Why?

“You are the average of the five people you spend the most time with.” — Jim Rohn

The possible result of any situation will be the average of all possible outcomes. So if your aim is to become a professional table tennis player, then surround yourself with professional table tennis players. If you want to be successful then surround yourself with and successful people. A MMG is a way of surrounding yourself with like people of similar focuses ambitions and interest, increasing your changes of success. Both Benjamin Franklin and Thomas Edison saw the benefits and were involved in MMGs.

Don’t reinvent the wheel, you are not the first person to aspire to be a professional table tennis player. MMG help you focus, shape or throw out ideas while increasing your confidence that you’ve made the right decisions and are taking correct actions. While providing inspiration and shared success stories, so you know it can be done.

A MMG should be place of unbiased ideas, unbiased respectful opinions, encouragement, inspiration, shared resources and accountability. It should not be about chit chat and gossip but focused on your growth and the growth of others in the group through the collective brain power. To paraphrase Napoleon Hill, success is planned and earned the only limitation you have is the one you accept in your own mind.

What is in a name?

A name and description helps set the purpose and make clear the groups objective and helps ensure it is formed around people striving for a common purpose, but not necessarily with common perspectives. Hearing different views helps you see the forest from the trees. It is not always easy to see your own problems they way others do. It is important to have people with similar drive, commitment and be in the same place in business/life so that everyone gets something from the MGG and the input doesn’t become lop sided.

MMG Membership

Pick your group members carefully, as the group will only be as good as the people in it. Try to choose people with different perspective and skill sets, because they will see the world in a different way and provide solutions you may not see. And only allow new members with the unanimous consent of the group.

Be prepared to ask a member to leave the group if they are not up to the standard of participation and do it quickly once the poor behaviour becomes evident. A “slacking” member will bring down the energy and fun level of the whole group.

Create habits by creating rules

A set of rules will help the group know what is expected of them, avoid disappointment and provide understanding about their return on their investment (time), after all the group needs to work for everyone. If someone is not a good fit for the group (i.e. not meeting expectations), then a set of rules — not followed — makes a hard conversation about someone leaving easier.

6 Rules to create habits:


  Rules are never forever (change where needed).
  Group size should stay at 2 to 5 people to provide opportunity for all to speak and be listened to.
  New members may only come in to the group with unanimous consent after a test in the hot seat.
  Respect other peoples time. Don’t miss meetings and be on time.
  What happens in the MMG stays in the MMG — it is a sacred place
  Be willing to dissect and be dissected


Meet Regularly and Precisely

Keep to a regularly scheduled time and ensure all members are punctual and that meetings end on time. Give each member equal time and capture what happens at each meeting: lessons and triumphs; goals; and items you want to keep each other accountable to.

Assuming a 60 minute meeting, a meeting will start with a 10 minute round table where everyone shares wins they have had — preferable from there previous meetings goals. This sets a positive tone for the meeting and gets the blood pumping. Followed by a 40 minute hot seat where one member presents a problem or business idea they are working on and the group provides feed back and advice on how to move forward. To close out the meeting a second 10 minute round table where the MMG share goals for the following period.

Roles and Responsibilities

Each meeting needs three roles, that are rotated each week: The facilitator,  the hot seat and the group. The each have different responsibilities:

The Facilitator


  The person from last weeks hot seat
  Keep track of time
  Direct the conversation
  Prompt the quiet ones


The Hot Seat


  Present a problem or issue
  Talk about current or upcoming projects
  Present a recent finding or discovery
  Ask specific (direction) questions


The Group


  Listen, provide your full attention and respect that persons time
  Share experiences and resources
  Dissect and investigate further (why? more information)
  Encourage and support (energize)


Tips

9 Tips to for a successful MMG:


  Be brutally honest
  Share how you are best motivated (so how are you best motivated)
  Dedicate goals meetings (2x per year)
  Plan ahead when you are in the hot seat (don’t waste other peoples / your time)
  Meet in person once a year (fun / fancy)
  Start a private hub
  Follow up and know it’s okay to disagree
  Make it a priority
  Create rules


Building a MMG

MMG are build through networks and connections. A good way to build your network is to go to environments were you can find like minded people such as seminars, meet ups and industry groups.  The more successful you become the easier it is to find people for your MMG

Links / References

Some links and references used to write this post:


  How To Start and Run a Mastermind Group
  What is a Mastermind Group? A Definition
  Napoleon Hill’s Mastermind Principle
  How to Structure a Mastermind Meeting - SPI TV, Ep. 10
  Mastermind Groups are the Secret to Success - Tips and Presentation! - SPI TV, Ep. 9
  How to Build a Winning Mastermind Group (Webinar Replay) - SPI TV, Ep. 12</summary></entry><entry><title>Jekyll and Search Engine Optimisation</title><link href="http://localhost:3000/programming/jekyll-seo.html" rel="alternate" type="text/html" title="Jekyll and Search Engine Optimisation" /><published>2016-01-27T00:00:00+11:00</published><updated>2016-01-27T00:00:00+11:00</updated><id>http://localhost:3000/programming/jekyll-seo</id><content type="html" xml:base="http://localhost:3000/programming/jekyll-seo.html">&lt;h3 id=&quot;basics&quot;&gt;Basics&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Create unique, accurate page titles &lt;i class=&quot;fa fa-check&quot;&gt;&lt;/i&gt;&lt;/li&gt;
  &lt;li&gt;Make use of the “description” meta tag &lt;i class=&quot;fa fa-check&quot;&gt;&lt;/i&gt;&lt;/li&gt;
  &lt;li&gt;Improve the structure of your URLs and make your site easier to navigate – Permalinks &lt;i class=&quot;fa fa-check&quot;&gt;&lt;/i&gt;&lt;/li&gt;
  &lt;li&gt;Offer quality content and services – Build your authority (back liks)&lt;/li&gt;
  &lt;li&gt;Write better anchor text. Use descriptive text when linking:&lt;/li&gt;
  &lt;li&gt;Optimize your use of images – Image sitemap&lt;/li&gt;
  &lt;li&gt;Use heading tags appropriately&lt;/li&gt;
  &lt;li&gt;Make effective use of robots.txt&lt;/li&gt;
  &lt;li&gt;Be aware of rel=”nofollow” for links&lt;/li&gt;
  &lt;li&gt;Notify Google of mobile sites &lt;i class=&quot;fa fa-check&quot;&gt;&lt;/i&gt;&lt;/li&gt;
  &lt;li&gt;Guide mobile users accurately &lt;i class=&quot;fa fa-check&quot;&gt;&lt;/i&gt;&lt;/li&gt;
  &lt;li&gt;Promote your website in the right ways&lt;/li&gt;
  &lt;li&gt;Make use of free webmaster tools&lt;/li&gt;
  &lt;li&gt;404 meaningful&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mystery algorithm&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Link to gPlus author&lt;/li&gt;
  &lt;li&gt;Search Engines love fresh content&lt;/li&gt;
  &lt;li&gt;Search Engines don’t like duplicate content&lt;/li&gt;
  &lt;li&gt;Images should always have an alt attribute&lt;/li&gt;
  &lt;li&gt;HTTPS &lt;i class=&quot;fa fa-check&quot;&gt;&lt;/i&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;page-titles&quot;&gt;Page Titles&lt;/h3&gt;
&lt;p&gt;YAML front matter&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
title: Jekyll and Search Engine Optimisation
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;config.yml&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
name: &quot;Ian Teda&quot;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;the &amp;lt;title&amp;gt; tag should be placed within the &amp;lt;head&amp;gt; tag&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;
&lt;head&gt;
...
&lt;title&gt;
  {% if page.title %}
    {{ page.title }}
  {% else %}
    {{ site.name }}
  {% endif %}
&lt;/title&gt;
...
&lt;/head&gt;
&lt;p&gt;```&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The contents of the title tag will usually appear in the first line of the results&lt;/li&gt;
  &lt;li&gt;Create a unique title for each page on your site&lt;/li&gt;
  &lt;li&gt;Choose a title that effectively communicates the topic of the page’s content&lt;/li&gt;
  &lt;li&gt;Use brief, but descriptive titles&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;page-description&quot;&gt;Page Description&lt;/h3&gt;
&lt;p&gt;Make use of the “description” meta tag&lt;/p&gt;

&lt;p&gt;YAML front matter&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
description: Optimising your Jekyll Website for SEO
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;
&lt;head&gt;
...
{% if page.description %}
  &lt;meta name=&quot;description&quot; content=&quot;{{ page.description }}&quot; /&gt;
{% endif %}
...
&lt;/head&gt;
&lt;p&gt;```&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Words in the snippet are bolded when they appear in the user’s query&lt;/li&gt;
  &lt;li&gt;Google might use them as snippets for your pages&lt;/li&gt;
  &lt;li&gt;Write a description that would both inform and interest users if they saw your description meta tag as a snippet in a search result&lt;/li&gt;
  &lt;li&gt;Having a different description meta tag for each page helps both users and Google&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;permalinks&quot;&gt;Permalinks&lt;/h3&gt;
&lt;p&gt;Improve the structure of your URLs and navigation&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Simple-to-understand URLs will convey content information easily&lt;/li&gt;
  &lt;li&gt;lead to better crawling of your documents by search engines&lt;/li&gt;
  &lt;li&gt;“friendlier” URLs for those that want to link to your content&lt;/li&gt;
  &lt;li&gt;reciting the URL from memory or creating a link&lt;/li&gt;
  &lt;li&gt;URLs are displayed in search results&lt;/li&gt;
  &lt;li&gt;Use words in URLs&lt;/li&gt;
  &lt;li&gt;Create a simple directory structure&lt;/li&gt;
  &lt;li&gt;Provide one version of a URL to reach a document&lt;/li&gt;
  &lt;li&gt;Plan out your navigation based on your homepage&lt;/li&gt;
  &lt;li&gt;Ensure more convenience for users by using ‘breadcrumb lists’&lt;/li&gt;
  &lt;li&gt;allows visitors to quickly navigate back to a previous section or the root page (breadcrumbs)&lt;/li&gt;
  &lt;li&gt;Allow for the possibility of a part of the URL being removed 404&lt;/li&gt;
  &lt;li&gt;Prepare two sitemaps: one for users, one for search engines&lt;/li&gt;
  &lt;li&gt;Use mostly text for navigation&lt;/li&gt;
  &lt;li&gt;Have a useful 404 page&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;https&quot;&gt;HTTPS&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Cloudflare / DNS records&lt;/li&gt;
  &lt;li&gt;ssl-redirect / enforce_ssl&lt;/li&gt;
&lt;/ol&gt;

&lt;h6 id=&quot;references&quot;&gt;References&lt;/h6&gt;
&lt;p&gt;[^n] http://jekyll.tips/tutorials/seo/
http://sixrevisions.com/content-strategy/5-common-seo-mistakes-with-web-page-titles/
http://vdaubry.github.io/2014/10/21/SEO-for-your-Jekyll-blog/
https://moz.com/learn/seo/meta-description
http://static.googleusercontent.com/media/www.google.com/en//webmasters/docs/search-engine-optimization-starter-guide.pdf
https://www.youtube.com/watch?v=vS1Mw1Adrk0&lt;/p&gt;</content><category term="programming" /><category term="jekyll" /><category term="seo" /><summary>Basics


  Create unique, accurate page titles 
  Make use of the “description” meta tag 
  Improve the structure of your URLs and make your site easier to navigate – Permalinks 
  Offer quality content and services – Build your authority (back liks)
  Write better anchor text. Use descriptive text when linking:
  Optimize your use of images – Image sitemap
  Use heading tags appropriately
  Make effective use of robots.txt
  Be aware of rel=”nofollow” for links
  Notify Google of mobile sites 
  Guide mobile users accurately 
  Promote your website in the right ways
  Make use of free webmaster tools
  404 meaningful


Mystery algorithm


  Link to gPlus author
  Search Engines love fresh content
  Search Engines don’t like duplicate content
  Images should always have an alt attribute
  HTTPS 


Page Titles
YAML front matter


title: Jekyll and Search Engine Optimisation


config.yml


name: &quot;Ian Teda&quot;


the &amp;lt;title&amp;gt; tag should be placed within the &amp;lt;head&amp;gt; tag

```

...

  {% if page.title %}
    {{ page.title }}
  {% else %}
    {{ site.name }}
  {% endif %}

...

```


  The contents of the title tag will usually appear in the first line of the results
  Create a unique title for each page on your site
  Choose a title that effectively communicates the topic of the page’s content
  Use brief, but descriptive titles


Page Description
Make use of the “description” meta tag

YAML front matter


description: Optimising your Jekyll Website for SEO


```

...
{% if page.description %}
  
{% endif %}
...

```


  Words in the snippet are bolded when they appear in the user’s query
  Google might use them as snippets for your pages
  Write a description that would both inform and interest users if they saw your description meta tag as a snippet in a search result
  Having a different description meta tag for each page helps both users and Google


Permalinks
Improve the structure of your URLs and navigation


  Simple-to-understand URLs will convey content information easily
  lead to better crawling of your documents by search engines
  “friendlier” URLs for those that want to link to your content
  reciting the URL from memory or creating a link
  URLs are displayed in search results
  Use words in URLs
  Create a simple directory structure
  Provide one version of a URL to reach a document
  Plan out your navigation based on your homepage
  Ensure more convenience for users by using ‘breadcrumb lists’
  allows visitors to quickly navigate back to a previous section or the root page (breadcrumbs)
  Allow for the possibility of a part of the URL being removed 404
  Prepare two sitemaps: one for users, one for search engines
  Use mostly text for navigation
  Have a useful 404 page


HTTPS


  Cloudflare / DNS records
  ssl-redirect / enforce_ssl


References
[^n] http://jekyll.tips/tutorials/seo/
http://sixrevisions.com/content-strategy/5-common-seo-mistakes-with-web-page-titles/
http://vdaubry.github.io/2014/10/21/SEO-for-your-Jekyll-blog/
https://moz.com/learn/seo/meta-description
http://static.googleusercontent.com/media/www.google.com/en//webmasters/docs/search-engine-optimization-starter-guide.pdf
https://www.youtube.com/watch?v=vS1Mw1Adrk0</summary></entry><entry><title>Welcome to ianteda.com</title><link href="http://localhost:3000/management/ianteda-com.html" rel="alternate" type="text/html" title="Welcome to ianteda.com" /><published>2016-01-21T00:00:00+11:00</published><updated>2016-01-21T00:00:00+11:00</updated><id>http://localhost:3000/management/ianteda-com</id><content type="html" xml:base="http://localhost:3000/management/ianteda-com.html">&lt;p&gt;&lt;img src=&quot;/assets/images/head-shot.png&quot; alt=&quot;Ian Teda photo&quot; title=&quot;Optional Title&quot; class=&quot;img-circle&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hello and thank you for visiting &lt;a href=&quot;ianteda.com&quot;&gt;ianteda.com&lt;/a&gt;, my little corner of the Internet.&lt;/p&gt;

&lt;p&gt;I created &lt;a href=&quot;ianteda.com&quot;&gt;ianteda.com&lt;/a&gt; with the desire to be useful by providing content around ideas, thoughts and projects I am learning and working on. Second to being useful, I wanted to build and manage my professional image, brand and authority.&lt;/p&gt;

&lt;p&gt;The concept of being useful came from &lt;a href=&quot;http://blog.dilbert.com/post/130338537981/the-moist-robot-ethical-code&quot;&gt;Scott Adams&lt;/a&gt; the creator of the &lt;a href=&quot;http://dilbert.com&quot;&gt;Dilbert Cartoons&lt;/a&gt;. The answer to the ultimate question of Life, the Universe, and Everything is not &lt;a href=&quot;http://www.urbandictionary.com/define.php?term=42&quot;&gt;42&lt;/a&gt; but “Be Useful”. Need a business idea? How can you be useful. What should I do in life? Be useful. How can I get people to like me? Be useful.&lt;/p&gt;

&lt;p&gt;How can I be useful? By providing content around ideas, thoughts and projects, putting a URL to it ( thanks &lt;a href=&quot;http://www.hanselman.com/blog/YourWordsAreWasted.aspx&quot;&gt;Scott Hanselman&lt;/a&gt;) and sharing. It comes with the added bonuses of helping build a brand, authority, practice my writing and help develop ideas through the articulation of writing.&lt;/p&gt;

&lt;p&gt;To find out more about me check out the &lt;a href=&quot;/about.html&quot;&gt;About&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To find out what I am currently working on check out the &lt;a href=&quot;/now.html&quot;&gt;Now&lt;/a&gt;&lt;/p&gt;</content><category term="management" /><category term="Business" /><category term="Professional" /><summary>Hello and thank you for visiting ianteda.com, my little corner of the Internet.

I created ianteda.com with the desire to be useful by providing content around ideas, thoughts and projects I am learning and working on. Second to being useful, I wanted to build and manage my professional image, brand and authority.

The concept of being useful came from Scott Adams the creator of the Dilbert Cartoons. The answer to the ultimate question of Life, the Universe, and Everything is not 42 but “Be Useful”. Need a business idea? How can you be useful. What should I do in life? Be useful. How can I get people to like me? Be useful.

How can I be useful? By providing content around ideas, thoughts and projects, putting a URL to it ( thanks Scott Hanselman) and sharing. It comes with the added bonuses of helping build a brand, authority, practice my writing and help develop ideas through the articulation of writing.

To find out more about me check out the About

To find out what I am currently working on check out the Now</summary></entry><entry><title>Be Bold &amp;amp; Make Mistakes</title><link href="http://localhost:3000/creativity/bold-mistakes.html" rel="alternate" type="text/html" title="Be Bold &amp; Make Mistakes" /><published>2016-01-19T00:00:00+11:00</published><updated>2016-01-19T00:00:00+11:00</updated><id>http://localhost:3000/creativity/bold-mistakes</id><content type="html" xml:base="http://localhost:3000/creativity/bold-mistakes.html">&lt;blockquote&gt;
  &lt;p&gt;All courses of action are risky, so prudence is not in avoiding danger (it’s impossible), but calculating risk and acting decisively. Make mistakes of ambition and not mistakes of sloth. Develop the strength to do bold things, not the strength to suffer.
&lt;cite&gt;– Chapter III: Of Mixed Princedoms&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There is risk with all things in life. It cannot be avoided so do not let the possibility of failure prevent action. An indecision is still a decision. Move forward knowing that the decision you made was the right one, based on the knowledge you had at the time. Whether or not it turns out to be right is besides the point, considered action is.&lt;/p&gt;

&lt;p&gt;Becoming successful requires risk and with risk comes mistakes. It is through these mistakes that we learn and grow. We can try and avoid risk but in the end we will make mistakes. However, there are mistakes of sloth (mistakes) and mistakes of ambition. Mistake of sloth lead to missed opportunity and regret. While, for the most part mistakes of ambition will be forgiven because they come from good intentions. Mistakes of sloth are not so easily forgiven and often it is ourselves that are the last to forget, because of our regret.&lt;/p&gt;

&lt;p&gt;Success for the most part is subjective, but what ever your measure may be it still requires action. It is comfortable to stay on the path of least resistance, because it is well walked. But be bold and walk the road less traveled.&lt;/p&gt;

&lt;p&gt;[^] &lt;a rel=&quot;nofollow&quot; href=&quot;http://www.amazon.com/gp/product/0486272745/ref=as_li_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=0486272745&amp;amp;linkCode=as2&amp;amp;tag=iate-20&amp;amp;linkId=XF6OTL2R2FAENV6H&quot;&gt;The Prince&lt;/a&gt; by Niccolò Machiavelli. Written in the 16th century, it is about acquiring power and maintaining it (pre democracy).&lt;/p&gt;</content><category term="creativity" /><category term="Philosophy" /><summary>All courses of action are risky, so prudence is not in avoiding danger (it’s impossible), but calculating risk and acting decisively. Make mistakes of ambition and not mistakes of sloth. Develop the strength to do bold things, not the strength to suffer.
– Chapter III: Of Mixed Princedoms


There is risk with all things in life. It cannot be avoided so do not let the possibility of failure prevent action. An indecision is still a decision. Move forward knowing that the decision you made was the right one, based on the knowledge you had at the time. Whether or not it turns out to be right is besides the point, considered action is.

Becoming successful requires risk and with risk comes mistakes. It is through these mistakes that we learn and grow. We can try and avoid risk but in the end we will make mistakes. However, there are mistakes of sloth (mistakes) and mistakes of ambition. Mistake of sloth lead to missed opportunity and regret. While, for the most part mistakes of ambition will be forgiven because they come from good intentions. Mistakes of sloth are not so easily forgiven and often it is ourselves that are the last to forget, because of our regret.

Success for the most part is subjective, but what ever your measure may be it still requires action. It is comfortable to stay on the path of least resistance, because it is well walked. But be bold and walk the road less traveled.

[^] The Prince by Niccolò Machiavelli. Written in the 16th century, it is about acquiring power and maintaining it (pre democracy).</summary></entry><entry><title>4 Reasons Why I Decided to Use Jekyll</title><link href="http://localhost:3000/programming/why-jekyll-website.html" rel="alternate" type="text/html" title="4 Reasons Why I Decided to Use Jekyll" /><published>2016-01-17T00:00:00+11:00</published><updated>2016-01-17T00:00:00+11:00</updated><id>http://localhost:3000/programming/why-jekyll-website</id><content type="html" xml:base="http://localhost:3000/programming/why-jekyll-website.html">&lt;p&gt;I decide to use &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; for speed, simplicity, security profile and quality free hosting (Github).&lt;/p&gt;

&lt;p&gt;It occurred to me, while assessing options for &lt;a href=&quot;ianteda.com&quot;&gt;ianteda.com&lt;/a&gt; any platform (&lt;a href=&quot;https://en.wikipedia.org/wiki/Content_management_system&quot;&gt;CMS&lt;/a&gt;) worth its salt would use a cache system. And a cache system turns a dynamic site into a static site. The main reason I would want a CMS would be for others authors to add content, which I don’t need since &lt;a href=&quot;ianteda.com&quot;&gt;ianteda.com&lt;/a&gt; is all about me. Lets skip the whole CMS and go straight to the static Website. Enter &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h4&gt;
&lt;p&gt;Question: What is Jekyll? Answer: Well, it is a Website generator.&lt;/p&gt;

&lt;p&gt;Jekyll calls it self:
&amp;gt; [A] simple, blog-aware, static site generator. It takes a template directory containing raw text files in various formats, runs it through a converter (like Markdown) and our Liquid renderer, and spits out a complete, ready-to-publish static website suitable for serving with your favorite web server.&lt;/p&gt;

&lt;h4 id=&quot;speed&quot;&gt;Speed&lt;/h4&gt;
&lt;p&gt;No database means speed
To get speed any dynamic Website builds a cache of static files, removing the need for database calls.&lt;/p&gt;

&lt;h4 id=&quot;simplicity&quot;&gt;Simplicity&lt;/h4&gt;
&lt;p&gt;No database calls
Control of the system
Predicable, the static files are what you get means peace of mind&lt;/p&gt;

&lt;h4 id=&quot;security&quot;&gt;Security&lt;/h4&gt;
&lt;p&gt;Moving parts
No database calls
No login to CMS&lt;/p&gt;

&lt;h4 id=&quot;free-hosting&quot;&gt;Free hosting&lt;/h4&gt;
&lt;p&gt;Static means no database, which means cheep hosting
Github pages
Developed by xyz the creator of Github. Github provides free hosting through its Github Pages&lt;/p&gt;

&lt;h4 id=&quot;who-else-is-using-jekyll&quot;&gt;Who Else is Using Jekyll&lt;/h4&gt;
&lt;p&gt;Obama campaign
Bootstrap&lt;/p&gt;

&lt;h4 id=&quot;getting-a-jekyll-website-up-and-running&quot;&gt;Getting a Jekyll Website Up and Running&lt;/h4&gt;
&lt;p&gt;Github pages
Another post&lt;/p&gt;</content><category term="programming" /><category term="Jekyll" /><category term="Github" /><summary>I decide to use Jekyll for speed, simplicity, security profile and quality free hosting (Github).

It occurred to me, while assessing options for ianteda.com any platform (CMS) worth its salt would use a cache system. And a cache system turns a dynamic site into a static site. The main reason I would want a CMS would be for others authors to add content, which I don’t need since ianteda.com is all about me. Lets skip the whole CMS and go straight to the static Website. Enter Jekyll.

Jekyll
Question: What is Jekyll? Answer: Well, it is a Website generator.

Jekyll calls it self:
&amp;gt; [A] simple, blog-aware, static site generator. It takes a template directory containing raw text files in various formats, runs it through a converter (like Markdown) and our Liquid renderer, and spits out a complete, ready-to-publish static website suitable for serving with your favorite web server.

Speed
No database means speed
To get speed any dynamic Website builds a cache of static files, removing the need for database calls.

Simplicity
No database calls
Control of the system
Predicable, the static files are what you get means peace of mind

Security
Moving parts
No database calls
No login to CMS

Free hosting
Static means no database, which means cheep hosting
Github pages
Developed by xyz the creator of Github. Github provides free hosting through its Github Pages

Who Else is Using Jekyll
Obama campaign
Bootstrap

Getting a Jekyll Website Up and Running
Github pages
Another post</summary></entry><entry><title>Using Gulp with Jekyll</title><link href="http://localhost:3000/programming/gulp-for-jekyll.html" rel="alternate" type="text/html" title="Using Gulp with Jekyll" /><published>2016-01-15T00:00:00+11:00</published><updated>2016-01-15T00:00:00+11:00</updated><id>http://localhost:3000/programming/gulp-for-jekyll</id><content type="html" xml:base="http://localhost:3000/programming/gulp-for-jekyll.html">&lt;h3 id=&quot;structure&quot;&gt;Structure&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Development&lt;/li&gt;
  &lt;li&gt;Build&lt;/li&gt;
  &lt;li&gt;Deployment&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;development&quot;&gt;Development&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Images
    &lt;ul&gt;
      &lt;li&gt;Copy images from source to temporary folder for serve, but only those changed or new&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Scripts
    &lt;ul&gt;
      &lt;li&gt;Concatinate&lt;/li&gt;
      &lt;li&gt;Sourcemaps&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Styles
    &lt;ul&gt;
      &lt;li&gt;Concatinate&lt;/li&gt;
      &lt;li&gt;Sourcemaps&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Inject
    &lt;ul&gt;
      &lt;li&gt;Styles&lt;/li&gt;
      &lt;li&gt;Scripts&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Fonts
    &lt;ul&gt;
      &lt;li&gt;Copy&lt;/li&gt;
      &lt;li&gt;Flatten folder structure&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;images-task&quot;&gt;Images Task&lt;/h5&gt;
&lt;p&gt;```
/**
 * IMAGES
 * Lazy load gulp plugins using gulp-load-plugins and attaches them variable $.
 * Copy changed files into .tmp folder
 * –prod optimises images with imagemin
 */&lt;/p&gt;

&lt;p&gt;var gulp = require(‘gulp’);
var argv = require(‘yargs’).argv;
var $ = require(‘gulp-load-plugins’)({
  pattern: [‘gulp-&lt;em&gt;’, ‘gulp.&lt;/em&gt;’, ‘del’],
	lazy: true
});&lt;/p&gt;

&lt;p&gt;/**
 * CONFIG
 */
var images = require(‘../gulp-config’).images;
var imagemin = require(‘../gulp-config’).imagemin;&lt;/p&gt;

&lt;p&gt;/**
  * IMAGES TASK
  */
gulp.task(‘images’, function () {
  return gulp.src(images.src)
		.pipe($.if(!argv.prod, $.changed(images.dest)))
		.pipe($.size({title: ‘Images:’}))
    .pipe($.if(argv.prod, $.cache($.imagemin(imagemin.options))))
    .pipe($.if(argv.prod, $.size({title: ‘Optimised:’})))
		.pipe(gulp.dest(images.dest));
})
```&lt;/p&gt;

&lt;h5 id=&quot;scripts-task&quot;&gt;Scripts Task&lt;/h5&gt;
&lt;p&gt;```
/**
 * SCRIPTS
 * Lazy load gulp plugins using gulp-load-plugins and attaches them variable $.
 * Create a sourcemap of each javascript file, concatinate, ungilify
 * –prod will skip the sourcemaps, uglify (minimise), add a min suffix and create a gziped copy
 */&lt;/p&gt;

&lt;p&gt;var gulp = require(‘gulp’);
var argv = require(‘yargs’).argv;
var $ = require(‘gulp-load-plugins’)({
  pattern: [‘gulp-&lt;em&gt;’, ‘gulp.&lt;/em&gt;’, ‘del’],
	lazy: true
});&lt;/p&gt;

&lt;p&gt;/**
 * CONFIG
 */
var scripts = require(‘../gulp-config’).scripts;
var uglify = require(‘../gulp-config’).uglify;
var gzip = require(‘../gulp-config’).gzip;&lt;/p&gt;

&lt;p&gt;gulp.task(‘scripts’, function (){
  return gulp.src(scripts.src)
    .pipe($.if(!argv.prod, $.sourcemaps.init()))
    .pipe($.concat(scripts.filename))
    .pipe($.size({title: ‘Concatinated:’}))
    .pipe($.if(!argv.prod, $.sourcemaps.write(‘./’)))
    .pipe($.if(argv.prod, $.uglify(uglify.options)))
    .pipe($.if(argv.prod, $.rename({suffix: ‘.min’})))
    .pipe($.if(argv.prod, $.size({title: ‘Uglified:’})))
    .pipe($.if(argv.prod, gulp.dest(scripts.dest)))
    .pipe($.if(argv.prod, $.gzip(gzip.options)))
    .pipe($.if(argv.prod, $.size({title: ‘GZiped:’})))
    .pipe(gulp.dest(scripts.dest));
})
```&lt;/p&gt;

&lt;h5 id=&quot;inject&quot;&gt;Inject&lt;/h5&gt;
&lt;p&gt;```
/**
 * INJECT
 * Lazy load gulp plugins using gulp-load-plugins and attach them variable $.
 * Inject styles and scripts into include files, ignoring the .tmp/ folder in path
 */&lt;/p&gt;

&lt;p&gt;/**
 * REQUIRES
 &lt;em&gt;/
var gulp = require(‘gulp’);
var $ = require(‘gulp-load-plugins’)({
  pattern: [‘gulp-&lt;/em&gt;’, ‘gulp.*’, ‘del’],
 lazy: true
});&lt;/p&gt;

&lt;p&gt;/**
 * CONFIG
 */
var inject = require(‘../gulp-config’).inject;
var scripts = require(‘../gulp-config’).scripts;
var styles = require(‘../gulp-config’).styles;&lt;/p&gt;

&lt;p&gt;/**
 * INJECT STYLE SHEETS
 * Inject style sheet reference into _includes/styles.html
 */
gulp.task(‘inject:styles’, function () {
  return gulp.src(styles.inject.target)
    .pipe($.inject(gulp.src(styles.inject.files, inject.options), {
      ignorePath: ‘.tmp/’,
    }))
    .pipe(gulp.dest(styles.inject.dest));
});&lt;/p&gt;

&lt;p&gt;/**
 * INJECT SCRIPTS
 * Inject javascript reference into _includes/scripts.html
 */
gulp.task(‘inject:scripts’, function () {
  return gulp.src(scripts.inject.target)
    .pipe($.inject(gulp.src(scripts.inject.files, {
      read: false
    }), {
      ignorePath: ‘.tmp/’,
    }))
    .pipe(gulp.dest(scripts.inject.dest));
});&lt;/p&gt;

&lt;p&gt;/**
 * INJECT
 */
gulp.task(‘inject’, gulp.parallel(‘inject:styles’, ‘inject:scripts’));
```&lt;/p&gt;

&lt;h5 id=&quot;html&quot;&gt;Html&lt;/h5&gt;
&lt;p&gt;```
/**
 * HTML
 * Lazy load gulp plugins using gulp-load-plugins and attach them variable $.
 * Default the task do not do anything
 * –prod will uglify (minimise) html files and create a gziped copy
 */&lt;/p&gt;

&lt;p&gt;/**
 * REQUIRES
 &lt;em&gt;/
var gulp = require(‘gulp’);
var argv = require(‘yargs’).argv;
var $ = require(‘gulp-load-plugins’)({
  pattern: [‘gulp-&lt;/em&gt;’, ‘gulp.*’, ‘del’]
});&lt;/p&gt;

&lt;p&gt;/**
 * CONFIG
 */
var html = require(‘../gulp-config’).html;
var gzip = require(‘../gulp-config’).gzip;
var htmlmin = require(‘../gulp-config’).htmlmin;&lt;/p&gt;

&lt;p&gt;/**
 * OPTIMISE HTML
 */
gulp.task(‘html’, function() {
  return gulp.src(html.optimise)
    .pipe($.if(argv.prod, $.size({title: ‘Html:’})))
    .pipe($.if(argv.prod, $.htmlmin(htmlmin.options)))
    .pipe($.if(argv.prod, $.size({title: ‘Minimised:’})))
    .pipe($.if(argv.prod, gulp.dest(html.dest)))
    .pipe($.if(argv.prod, $.gzip(gzip.options)))
    .pipe($.if(argv.prod, $.size({title: ‘GZiped:’})))
    .pipe($.if(argv.prod, gulp.dest(html.dest)));
});
```&lt;/p&gt;

&lt;h5 id=&quot;fonts&quot;&gt;Fonts&lt;/h5&gt;
&lt;p&gt;```
/**
 * FONTS
 * Lazy load gulp plugins using gulp-load-plugins and attach them variable $.
 * Collect all fonts and copy only changed fonts into assets fonts folder, flattening any folder hierarchy
 * –prod will do the same as above
 */&lt;/p&gt;

&lt;p&gt;/**
 * REQUIRES
 &lt;em&gt;/
var gulp = require(‘gulp’);
var $ = require(‘gulp-load-plugins’)({
  pattern: [‘gulp-&lt;/em&gt;’, ‘gulp.*’, ‘del’]
});&lt;/p&gt;

&lt;p&gt;/**
 * CONFIG
 */
var fonts = require(‘../gulp-config’).fonts;&lt;/p&gt;

&lt;p&gt;/**
 * COPY FONTS
 * Flatten folder structure
 * Copy only fonts that have changed into destination folder
 */
gulp.task(‘fonts’, function () {
  return gulp.src(fonts.src)
    .pipe($.changed(fonts.dest))
    .pipe($.flatten())
    .pipe(gulp.dest(fonts.dest))
    .pipe($.size({
      title: ‘Fonts size:’,
      showFiles: false
    }));
});
```&lt;/p&gt;

&lt;h5 id=&quot;browser-sync&quot;&gt;Browser Sync&lt;/h5&gt;
&lt;p&gt;```
/**
 * BROWSERSYNC
 * Start browsersync
 * –prod will start browsersync from build directory only
 */&lt;/p&gt;

&lt;p&gt;/**
 * REQUIRES
 */
var gulp = require(‘gulp’);
var argv = require(‘yargs’).argv;
var browsersync = require(‘browser-sync’);
var reload = browsersync.reload;&lt;/p&gt;

&lt;p&gt;/**
 * BROWSERSYNC
 */
gulp.task(‘browsersync’, function() {&lt;/p&gt;

&lt;p&gt;if (argv.prod){
    var baseDir = [‘build’];
  } else {
    var baseDir = [‘.tmp’, ‘build’];
  }&lt;/p&gt;

&lt;p&gt;browsersync({
    server: {
      baseDir: baseDir
    }
  });&lt;/p&gt;

&lt;p&gt;// Watch files for changes and do the needful
  gulp.watch([‘src/&lt;strong&gt;/&lt;em&gt;.md’, ‘src/**/&lt;/em&gt;.html’, ‘src/&lt;/strong&gt;/&lt;em&gt;.yml’], gulp.series(‘jekyll’, reload));
  gulp.watch([‘src/&lt;strong&gt;/*.xml’, ‘src/&lt;/strong&gt;/&lt;/em&gt;.txt’], gulp.series(‘jekyll’, reload));
  gulp.watch(‘src/assets/scripts/&lt;strong&gt;/&lt;em&gt;.js’, gulp.series(‘scripts’, reload));
  gulp.watch([‘src/assets/scss/**/&lt;/em&gt;.scss’, ‘src/assets/styles/&lt;/strong&gt;/&lt;em&gt;.css’], gulp.series(‘styles’, reload));
  gulp.watch(‘src/assets/images/**/&lt;/em&gt;’, gulp.series(‘images’, reload));
});
```&lt;/p&gt;

&lt;h5 id=&quot;github-pages&quot;&gt;Github pages&lt;/h5&gt;
&lt;p&gt;```
/**
 * GITHUB PAGES
 * Deploy generated pages to Github
 */&lt;/p&gt;

&lt;p&gt;/**
 * CONFIG
 */
var gulp = require(‘gulp’);
var ghPages = require(‘gulp-gh-pages’);&lt;/p&gt;

&lt;p&gt;/**
 * CONFIG
 */
var jekyll = require(‘../gulp-config’).jekyll;&lt;/p&gt;

&lt;p&gt;/**
 * GITHUB PAGES
 */
gulp.task(‘gh-pages’, function() {
  return gulp.src(jekyll.deploy)
    .pipe(ghPages({
      branch: ‘master’
    }));
});
```&lt;/p&gt;

&lt;h3 id=&quot;production&quot;&gt;Production&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Images
    &lt;ul&gt;
      &lt;li&gt;Clean: Clean temporary folder of images&lt;/li&gt;
      &lt;li&gt;Copy: Copy images from source to temporary folder for serve&lt;/li&gt;
      &lt;li&gt;Watch: Watch image folder for changes and copy changed images to temporary folder&lt;/li&gt;
      &lt;li&gt;Optimise: Optimise images in temporary folder&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><category term="programming" /><category term="gulp" /><category term="jekyll" /><summary>Structure


  Development
  Build
  Deployment


Development


  Images
    
      Copy images from source to temporary folder for serve, but only those changed or new
    
  
  Scripts
    
      Concatinate
      Sourcemaps
    
  
  Styles
    
      Concatinate
      Sourcemaps
    
  
  Inject
    
      Styles
      Scripts
    
  
  Fonts
    
      Copy
      Flatten folder structure
    
  


Images Task
```
/**
 * IMAGES
 * Lazy load gulp plugins using gulp-load-plugins and attaches them variable $.
 * Copy changed files into .tmp folder
 * –prod optimises images with imagemin
 */

var gulp = require(‘gulp’);
var argv = require(‘yargs’).argv;
var $ = require(‘gulp-load-plugins’)({
  pattern: [‘gulp-’, ‘gulp.’, ‘del’],
	lazy: true
});

/**
 * CONFIG
 */
var images = require(‘../gulp-config’).images;
var imagemin = require(‘../gulp-config’).imagemin;

/**
  * IMAGES TASK
  */
gulp.task(‘images’, function () {
  return gulp.src(images.src)
		.pipe($.if(!argv.prod, $.changed(images.dest)))
		.pipe($.size({title: ‘Images:’}))
    .pipe($.if(argv.prod, $.cache($.imagemin(imagemin.options))))
    .pipe($.if(argv.prod, $.size({title: ‘Optimised:’})))
		.pipe(gulp.dest(images.dest));
})
```

Scripts Task
```
/**
 * SCRIPTS
 * Lazy load gulp plugins using gulp-load-plugins and attaches them variable $.
 * Create a sourcemap of each javascript file, concatinate, ungilify
 * –prod will skip the sourcemaps, uglify (minimise), add a min suffix and create a gziped copy
 */

var gulp = require(‘gulp’);
var argv = require(‘yargs’).argv;
var $ = require(‘gulp-load-plugins’)({
  pattern: [‘gulp-’, ‘gulp.’, ‘del’],
	lazy: true
});

/**
 * CONFIG
 */
var scripts = require(‘../gulp-config’).scripts;
var uglify = require(‘../gulp-config’).uglify;
var gzip = require(‘../gulp-config’).gzip;

gulp.task(‘scripts’, function (){
  return gulp.src(scripts.src)
    .pipe($.if(!argv.prod, $.sourcemaps.init()))
    .pipe($.concat(scripts.filename))
    .pipe($.size({title: ‘Concatinated:’}))
    .pipe($.if(!argv.prod, $.sourcemaps.write(‘./’)))
    .pipe($.if(argv.prod, $.uglify(uglify.options)))
    .pipe($.if(argv.prod, $.rename({suffix: ‘.min’})))
    .pipe($.if(argv.prod, $.size({title: ‘Uglified:’})))
    .pipe($.if(argv.prod, gulp.dest(scripts.dest)))
    .pipe($.if(argv.prod, $.gzip(gzip.options)))
    .pipe($.if(argv.prod, $.size({title: ‘GZiped:’})))
    .pipe(gulp.dest(scripts.dest));
})
```

Inject
```
/**
 * INJECT
 * Lazy load gulp plugins using gulp-load-plugins and attach them variable $.
 * Inject styles and scripts into include files, ignoring the .tmp/ folder in path
 */

/**
 * REQUIRES
 /
var gulp = require(‘gulp’);
var $ = require(‘gulp-load-plugins’)({
  pattern: [‘gulp-’, ‘gulp.*’, ‘del’],
 lazy: true
});

/**
 * CONFIG
 */
var inject = require(‘../gulp-config’).inject;
var scripts = require(‘../gulp-config’).scripts;
var styles = require(‘../gulp-config’).styles;

/**
 * INJECT STYLE SHEETS
 * Inject style sheet reference into _includes/styles.html
 */
gulp.task(‘inject:styles’, function () {
  return gulp.src(styles.inject.target)
    .pipe($.inject(gulp.src(styles.inject.files, inject.options), {
      ignorePath: ‘.tmp/’,
    }))
    .pipe(gulp.dest(styles.inject.dest));
});

/**
 * INJECT SCRIPTS
 * Inject javascript reference into _includes/scripts.html
 */
gulp.task(‘inject:scripts’, function () {
  return gulp.src(scripts.inject.target)
    .pipe($.inject(gulp.src(scripts.inject.files, {
      read: false
    }), {
      ignorePath: ‘.tmp/’,
    }))
    .pipe(gulp.dest(scripts.inject.dest));
});

/**
 * INJECT
 */
gulp.task(‘inject’, gulp.parallel(‘inject:styles’, ‘inject:scripts’));
```

Html
```
/**
 * HTML
 * Lazy load gulp plugins using gulp-load-plugins and attach them variable $.
 * Default the task do not do anything
 * –prod will uglify (minimise) html files and create a gziped copy
 */

/**
 * REQUIRES
 /
var gulp = require(‘gulp’);
var argv = require(‘yargs’).argv;
var $ = require(‘gulp-load-plugins’)({
  pattern: [‘gulp-’, ‘gulp.*’, ‘del’]
});

/**
 * CONFIG
 */
var html = require(‘../gulp-config’).html;
var gzip = require(‘../gulp-config’).gzip;
var htmlmin = require(‘../gulp-config’).htmlmin;

/**
 * OPTIMISE HTML
 */
gulp.task(‘html’, function() {
  return gulp.src(html.optimise)
    .pipe($.if(argv.prod, $.size({title: ‘Html:’})))
    .pipe($.if(argv.prod, $.htmlmin(htmlmin.options)))
    .pipe($.if(argv.prod, $.size({title: ‘Minimised:’})))
    .pipe($.if(argv.prod, gulp.dest(html.dest)))
    .pipe($.if(argv.prod, $.gzip(gzip.options)))
    .pipe($.if(argv.prod, $.size({title: ‘GZiped:’})))
    .pipe($.if(argv.prod, gulp.dest(html.dest)));
});
```

Fonts
```
/**
 * FONTS
 * Lazy load gulp plugins using gulp-load-plugins and attach them variable $.
 * Collect all fonts and copy only changed fonts into assets fonts folder, flattening any folder hierarchy
 * –prod will do the same as above
 */

/**
 * REQUIRES
 /
var gulp = require(‘gulp’);
var $ = require(‘gulp-load-plugins’)({
  pattern: [‘gulp-’, ‘gulp.*’, ‘del’]
});

/**
 * CONFIG
 */
var fonts = require(‘../gulp-config’).fonts;

/**
 * COPY FONTS
 * Flatten folder structure
 * Copy only fonts that have changed into destination folder
 */
gulp.task(‘fonts’, function () {
  return gulp.src(fonts.src)
    .pipe($.changed(fonts.dest))
    .pipe($.flatten())
    .pipe(gulp.dest(fonts.dest))
    .pipe($.size({
      title: ‘Fonts size:’,
      showFiles: false
    }));
});
```

Browser Sync
```
/**
 * BROWSERSYNC
 * Start browsersync
 * –prod will start browsersync from build directory only
 */

/**
 * REQUIRES
 */
var gulp = require(‘gulp’);
var argv = require(‘yargs’).argv;
var browsersync = require(‘browser-sync’);
var reload = browsersync.reload;

/**
 * BROWSERSYNC
 */
gulp.task(‘browsersync’, function() {

if (argv.prod){
    var baseDir = [‘build’];
  } else {
    var baseDir = [‘.tmp’, ‘build’];
  }

browsersync({
    server: {
      baseDir: baseDir
    }
  });

// Watch files for changes and do the needful
  gulp.watch([‘src//.md’, ‘src/**/.html’, ‘src//.yml’], gulp.series(‘jekyll’, reload));
  gulp.watch([‘src//*.xml’, ‘src//.txt’], gulp.series(‘jekyll’, reload));
  gulp.watch(‘src/assets/scripts//.js’, gulp.series(‘scripts’, reload));
  gulp.watch([‘src/assets/scss/**/.scss’, ‘src/assets/styles//.css’], gulp.series(‘styles’, reload));
  gulp.watch(‘src/assets/images/**/’, gulp.series(‘images’, reload));
});
```

Github pages
```
/**
 * GITHUB PAGES
 * Deploy generated pages to Github
 */

/**
 * CONFIG
 */
var gulp = require(‘gulp’);
var ghPages = require(‘gulp-gh-pages’);

/**
 * CONFIG
 */
var jekyll = require(‘../gulp-config’).jekyll;

/**
 * GITHUB PAGES
 */
gulp.task(‘gh-pages’, function() {
  return gulp.src(jekyll.deploy)
    .pipe(ghPages({
      branch: ‘master’
    }));
});
```

Production


  Images
    
      Clean: Clean temporary folder of images
      Copy: Copy images from source to temporary folder for serve
      Watch: Watch image folder for changes and copy changed images to temporary folder
      Optimise: Optimise images in temporary folder</summary></entry><entry><title>A Letter to my Sons</title><link href="http://localhost:3000/creativity/a-letter-to-sons.html" rel="alternate" type="text/html" title="A Letter to my Sons" /><published>2015-12-10T00:00:00+11:00</published><updated>2015-12-10T00:00:00+11:00</updated><id>http://localhost:3000/creativity/a-letter-to-sons</id><content type="html" xml:base="http://localhost:3000/creativity/a-letter-to-sons.html">&lt;p&gt;Live, love, be generous, show respect and give thanks.&lt;/p&gt;

&lt;p&gt;Know who you are and remember were you came from, but always look forward to were you are going.&lt;/p&gt;

&lt;p&gt;Time is the most valuable thing you have, as death comes to us all. So spend your time wisely and without regrets. Make peace with God, yourself, your family and your friends so that when the day comes for you to face the great divide, you face it without the fear of death in your heart and without regrets. That your journey across will be one of ease and satisfaction of a life lived with only mistakes.&lt;/p&gt;

&lt;p&gt;Show respect to others and demand they respect you. Abuse no one and nothing because abuse turns the wise to fools and robs the spirit of its vision.&lt;/p&gt;

&lt;p&gt;Give thanks for what you have and for the joy of life. If you see no reason to give thanks, the fault lies only in yourself.&lt;/p&gt;</content><category term="creativity" /><category term="Philosophy" /><summary>Live, love, be generous, show respect and give thanks.

Know who you are and remember were you came from, but always look forward to were you are going.

Time is the most valuable thing you have, as death comes to us all. So spend your time wisely and without regrets. Make peace with God, yourself, your family and your friends so that when the day comes for you to face the great divide, you face it without the fear of death in your heart and without regrets. That your journey across will be one of ease and satisfaction of a life lived with only mistakes.

Show respect to others and demand they respect you. Abuse no one and nothing because abuse turns the wise to fools and robs the spirit of its vision.

Give thanks for what you have and for the joy of life. If you see no reason to give thanks, the fault lies only in yourself.</summary></entry></feed>
